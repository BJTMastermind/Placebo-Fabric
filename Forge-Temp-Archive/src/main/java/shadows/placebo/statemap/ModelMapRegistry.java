package shadows.placebo.statemap;

import java.util.HashMap;
import java.util.Map;

import net.minecraft.client.Minecraft;
import net.minecraft.client.resources.model.ModelResourceLocation;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraftforge.registries.ForgeRegistries;
import shadows.placebo.mixin.BlockModelShaperMixin;
import shadows.placebo.mixin.ModelBakeryMixin;

/**
 * Essentially a hacked in statemapper based on the old system from 1.12.
 * This allows things to provide their own MRL's instead of having them be auto-generated, which is not always useful.
 * Only used in Attained Drops, which is no longer supported.
 */
@Deprecated(forRemoval = true)
public class ModelMapRegistry {

	private static boolean enabled = false;

	/**
	 * Map of Blocks to their relevant statemappers.
	 */
	public static Map<ResourceLocation, IMapper<BlockState>> MAPPED_BLOCKS = new HashMap<>();

	/*
	 * Map of Items to their relevant statemappers.
	 */
	public static Map<ResourceLocation, IMapper<Item>> MAPPED_ITEMS = new HashMap<>();

	/**
	 * Registers a block mapper.
	 * @param block The block to map for.
	 * @param map Mapping function.
	 */
	public static void registerBlockMap(Block block, IMapper<BlockState> map) {
		enabled = true;
		MAPPED_BLOCKS.put(block.getRegistryName(), map);
	}

	/**
	 * Registers an item mapper.  Automatically registers it with the item model mesher.
	 * @param item The item to map for.
	 * @param map Mapping function.
	 */
	public static void registerItemMap(Item item, IMapper<Item> map) {
		enabled = true;
		MAPPED_ITEMS.put(item.getRegistryName(), map);
		Minecraft.getInstance().getItemRenderer().getItemModelShaper().register(item, map.map(item));
	}

	/**
	 * See {@link BlockModelShaperMixin}
	 * @param state The state to map.
	 * @param fallback The autogenerated MRL, in case we don't have one.
	 * @return The MRL For this blockstate.
	 */
	public static ModelResourceLocation getMRL(BlockState state, ModelResourceLocation fallback) {
		if (enabled) {
			IMapper<BlockState> map = MAPPED_BLOCKS.get(state.getBlock().getRegistryName());
			if (map != null) return map.map(state);
		}
		return fallback;
	}

	/**
	 * See {@link ModelBakeryMixin}
	 * @param item The item to map.
	 * @param fallback The autogenerated MRL, in case we don't have one.
	 * @return The MRL For this item.
	 */
	public static ModelResourceLocation getMRL(ModelResourceLocation fallback, ResourceLocation item) {
		if (enabled) {
			IMapper<Item> map = MAPPED_ITEMS.get(item);
			if (map != null) return map.map(ForgeRegistries.ITEMS.getValue(item));
		}
		return fallback;
	}
}
